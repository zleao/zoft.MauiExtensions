<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LocalizationPage_ChooseLanguageLabel" xml:space="preserve">
    <value>Sprache</value>
  </data>
  <data name="LocalizationPage_Label1" xml:space="preserve">
    <value>Was ist Lorem Ipsum?</value>
  </data>
  <data name="LocalizationPage_Label2" xml:space="preserve">
    <value>Lorem Ipsum ist ein einfacher Demo-Text für die Print- und Schriftindustrie. Lorem Ipsum ist in der Industrie bereits der Standard Demo-Text seit 1500, als ein unbekannter Schriftsteller eine Hand voll Wörter nahm und diese durcheinander warf um ein Musterbuch zu erstellen. Es hat nicht nur 5 Jahrhunderte überlebt, sondern auch in Spruch in die elektronische Schriftbearbeitung geschafft (bemerke, nahezu unverändert). Bekannt wurde es 1960, mit dem erscheinen von "Letraset", welches Passagen von Lorem Ipsum enhielt, so wie Desktop Software wie "Aldus PageMaker" - ebenfalls mit Lorem Ipsum.</value>
  </data>
  <data name="LocalizationPage_Label3" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris viverra pretium ex, in imperdiet eros porta ac. Donec sit amet sapien massa. Phasellus dignissim lectus sit amet dolor pharetra, sed ullamcorper urna luctus. Cras tincidunt congue sapien. Quisque vel lacus elementum, imperdiet elit vel, semper arcu. Praesent aliquam eget felis vitae facilisis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Donec dapibus tortor in ipsum ultrices cursus. Nulla feugiat iaculis ligula a volutpat. Sed a accumsan nulla. Nulla ipsum nisl, efficitur malesuada tortor vel, cursus dignissim odio. Praesent sit amet ornare ipsum. Nunc dictum, orci nec tincidunt semper, neque quam tempus massa, ut aliquet augue enim eget felis.

Suspendisse eget eros in justo gravida facilisis at vel velit. Donec feugiat semper neque sit amet porta. Maecenas at purus a ipsum placerat egestas nec ut nisl. Proin a vestibulum eros, a ullamcorper urna. Sed finibus ipsum sed tincidunt ultrices. Sed maximus velit sit amet congue gravida. Sed metus tortor, posuere vitae nibh nec, consectetur bibendum magna. Etiam iaculis aliquam auctor. Nulla lobortis elementum tellus.

Nam nec hendrerit ex, quis porttitor tellus. Maecenas rutrum volutpat metus. Nunc mattis, est ut interdum luctus, dui nunc efficitur metus, in aliquet elit mi at sapien. Maecenas vehicula mauris orci, vel sodales tortor hendrerit vel. Sed velit quam, maximus ut feugiat at, hendrerit aliquam tellus. Praesent iaculis hendrerit lobortis. Nunc tempus sapien ut dui lobortis ultricies. Donec at enim vitae ipsum congue finibus.

Pellentesque sit amet elit diam. Mauris feugiat porttitor gravida. Nam maximus, diam et gravida congue, nisi justo dignissim dui, in congue urna ante at nibh. Integer id erat leo. Interdum et malesuada fames ac ante ipsum primis in faucibus. Proin risus sapien, congue vel risus ut, volutpat placerat ipsum. Proin semper arcu a dui elementum volutpat. Integer in odio rhoncus, sagittis dolor a, maximus ligula. Curabitur eros erat, egestas a urna eget, tristique viverra nisi.

Nullam aliquet ullamcorper mi, et elementum justo dapibus at. In hac habitasse platea dictumst. Nulla viverra turpis justo, sed faucibus sem ullamcorper dapibus. Proin dignissim ultricies sagittis. Donec non convallis enim, sit amet ullamcorper orci. Maecenas orci mi, imperdiet quis mi ut, congue mollis sapien. Nullam scelerisque posuere tortor, eu viverra nisl hendrerit et.</value>
  </data>
  <data name="LocalizationPage_Title" xml:space="preserve">
    <value>Lokalisierung</value>
  </data>
  <data name="MainThreadPage_Title" xml:space="preserve">
    <value>Main Thread</value>
  </data>
  <data name="MainThreadPage_BusyMessage" xml:space="preserve">
    <value>Arbeite im Hintergrundthread</value>
  </data>
  <data name="DependsOnPage_Title" xml:space="preserve">
    <value>DependsOn</value>
  </data>
  <data name="DependsOnPage_MainLabel" xml:space="preserve">
    <value>Das Schreiben auf den TriggerText-Eintrag löst eine Aktualisierung des Zieltexts und des Zieldatums aus</value>
  </data>
  <data name="ValidationPage_Tile" xml:space="preserve">
    <value>Validierung</value>
  </data>
  <data name="ValidationPage_ComingSoon" xml:space="preserve">
    <value>Demnächst...</value>
  </data>
  <data name="MenuItem_DependsOnLabel" xml:space="preserve">
    <value>DependsOn Beispiel</value>
  </data>
  <data name="MenuItem_LocalizationLabel" xml:space="preserve">
    <value>Lokalisierung Beispiel</value>
  </data>
  <data name="MenuItem_MainThreadLabel" xml:space="preserve">
    <value>MainThread Beispiel</value>
  </data>
  <data name="MenuItem_ValidationLabel" xml:space="preserve">
    <value>Validierung Beispiel</value>
  </data>
  <data name="MainThreadPage_Message" xml:space="preserve">
    <value>Nachricht, die vom Hintergrundthread stammt und mit MainThreadService angezeigt wird</value>
  </data>
  <data name="MainThreadPage_ExecuteButtonLabel" xml:space="preserve">
    <value>Ausführen</value>
  </data>
</root>